version: 2.1

orbs:
  node: circleci/node@4.7.0
  aws-ecr: circleci/aws-ecr@9.1.0
  #aws-ecs: circleci/aws-ecs@1.12.0
  

executors:
  node-executor:
    docker:
      - image: circleci/node:16
    working_directory: /tmp/project

  python-executor:
    docker:
      - image: circleci/python:3.8  # Use your base image
    working_directory: /tmp/project

jobs:
  build:
    executor: node-executor
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: yarn install
      - run:
          name: build react app
          command: yarn build
      # - run:
      #     name: Create directory with permissions and list contents
      #     command: |
      #       mkdir -p -m 777 /tmp/project/workspace/build
      #       echo "Checking contents before persisting:"
      #       ls -la /tmp/project
      #       ls -la /tmp/project/workspace
      - persist_to_workspace:
          root: /tmp/project
          paths:
            - .

  build_and_push_docker_image:
    executor: python-executor
    steps: 
      - setup_remote_docker:
          version: 20.10.7
          docker_layer_cache: true
      - run:
          name: List contents of root directory
          command: ls -la
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: /tmp/project
      - run:
          name: List contents after attaching workspace
          command: |
            echo "Listing contents after attaching workspace:"
            ls -la /tmp/project
            # ls -la /tmp/project/Dockerfile  # Verify Dockerfile exists
      - run:
          name: create one folder
          command: mkdir -p /tmp/temp_build
      - run:
          name: copy build from workspace
          command: cp -r /tmp/project/build /tmp/temp_build/
      - run:
          name: Copy build files to the current directory
          command: cp -r /tmp/temp_build/* ./build/
      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get update
            sudo apt-get install -y awscli
      - run:
          name: build docker image
          command: docker build -t $ECR_REPO_NAME:$IMAGE_TAG .
        #654654612003.dkr.ecr.us-east-1.amazonaws.com/ecr_react_repo
      # - aws-ecr/login:
      #     aws-access-key-id: $AWS_ACCESS_KEY_ID
      #     aws-secret-access-key: $AWS_SECRET_ACCESS_KEY
      #     aws-region: $AWS_REGION
      - run:
          name: ECR authorization login
          command: |
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - run:
          name: tag docker image
          command: |
            docker tag $ECR_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG
      - run:
          name: push docker image to ECR
          command: |
            docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG
      - store_artifacts: #will store the build yarn file inside this
          path: ./build
          destination: /build_artifacts

  deploy_to_ecs:
    executor: node-executor
    steps:
      # - run:
      #     name: deploy to ecs
      #     command:
      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get update
            sudo apt-get install -y awscli jq
      - run:
          # name: Deploy to ECS Fargate
          # command: |
          #   - run:
          name: Update ECS Service
          command: |
            aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment --region $AWS_REGION

            


workflows:
  version: 2
  build_and_docker_image:
    jobs:
      - build
      - build_and_push_docker_image:
          requires:
            - build
      - deploy_to_ecs:
          requires:
            - build_and_push_docker_image

